{"version":3,"file":"static/js/910.9ccdc50e.chunk.js","mappings":"4XAmBMA,EAAOC,EAAAA,EAAAA,iBAIPC,EAAU,CAEd,CAAEC,MAAO,cACT,CAAEA,MAAO,aACT,CAAEA,MAAO,yBACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,QACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,aAET,CAAEA,MAAO,UACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,YACT,CAAEA,MAAO,8BACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,cACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,eACT,CAAEA,MAAO,eACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,OAET,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,aACT,CAAEA,MAAO,eACT,CAAEA,MAAO,SACT,CAAEA,MAAO,YACT,CAAEA,MAAO,UACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,YACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,eACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,YACT,CAAEA,MAAO,cACT,CAAEA,MAAO,qBAET,CAAEA,MAAO,WACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,oBAET,CAAEA,MAAO,gBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,6BACT,CAAEA,MAAO,8BACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,YACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,kCACT,CAAEA,MAAO,sCACT,CAAEA,MAAO,eACT,CAAEA,MAAO,eACT,CAAEA,MAAO,2BACT,CAAEA,MAAO,UACT,CAAEA,MAAO,UACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,eACT,CAAEA,MAAO,cACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,YACT,CAAEA,MAAO,eACT,CAAEA,MAAO,eACT,CAAEA,MAAO,QACT,CAAEA,MAAO,SACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,cACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,UACT,CAAEA,MAAO,cACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,OACT,CAAEA,MAAO,aACT,CAAEA,MAAO,cACT,CAAEA,MAAO,mBAET,CAAEA,MAAO,cACT,CAAEA,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,uBACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,QACT,CAAEA,MAAO,UACT,CAAEA,MAAO,cAET,CAAEA,MAAO,gBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,4BACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,eACT,CAAEA,MAAO,yBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,sBAET,CAAEA,MAAO,QACT,CAAEA,MAAO,eACT,CAAEA,MAAO,YACT,CAAEA,MAAO,UACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,QACT,CAAEA,MAAO,SACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,eACT,CAAEA,MAAO,cACT,CAAEA,MAAO,aACT,CAAEA,MAAO,aACT,CAAEA,MAAO,cACT,CAAEA,MAAO,WAII,SAASC,EAAQC,GAAIA,EAADC,EAAYD,EAATE,UAAc,IAE9CC,EAAI,EACFC,EAAWP,EAAQQ,KAAI,SAACC,GAAM,MAAM,CACxCC,GAAIC,OAAOL,KACXM,KAAMH,EAAOR,MACd,IACDY,QAAQC,IAAIP,IAEZQ,EAAAA,EAAAA,YAAU,WACFjB,IACJC,EAAAA,EAAAA,SACAiB,OAAOC,SAASC,SAEpB,GAAG,IAEH,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAE1BI,GAAwBL,EAAAA,EAAAA,UAAS,CAC/BM,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,KAAM,GACNC,WAAY,GACZC,QAAS,KACTC,GAAAX,EAAAA,EAAAA,GAAAG,EAAA,GARKS,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAUpBG,EAAwBC,EAAAA,SAAe,IAAGC,GAAAhB,EAAAA,EAAAA,GAAAc,EAAA,GAAnCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAuBrB,EAAAA,EAAAA,YAAUsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GACjCE,GADWD,EAAA,GAAQA,EAAA,IACOtB,EAAAA,EAAAA,UAAS,KAAGwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA6B3B,EAAAA,EAAAA,WAAS,GAAM4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAArCE,EAAOD,EAAA,GAACE,EAAUF,EAAA,GA8BnBG,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdrB,GAAQ,SAACsB,GACP,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GACNJ,EAAOC,GAEZ,GACF,EA0EMI,EAAmB,WACvB9C,OAAO+C,kBAAoB,IAAIC,EAAAA,EAAAA,KAAAA,kBAC7B,iBACA,CACEC,KAAM,YACNC,SAAU,SAACC,GAETC,IACAvD,QAAQC,IAAI,qBACd,EACAuD,eAAgB,MAGtB,EAEMD,EAAiB,SAACd,GACtBA,EAAEgB,iBACFzD,QAAQC,IAAI,QACZgD,IACAV,GAAW,GACXmB,YAAW,WAAMnB,GAAW,EAAM,GAAE,KACpC,IAAMoB,EAAc,MAAQpC,EAAKR,MAIjCf,QAAQC,IAAI0D,GAIZ,IAAMC,EAAczD,OAAO+C,kBAC3BC,EAAAA,EAAAA,OAEGU,sBAAsBF,EAAaC,GACnCE,MAAK,SAACC,GAGLC,EAAAA,GAAAA,QAAc,YAAa,CACzBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAETtE,OAAO4D,mBAAqBA,EAC5B/D,QAAQC,IAAI,oBAGd,IACCyE,OAAM,SAACxC,GAGNlC,QAAQC,IAAI,gBACZ+D,EAAAA,GAAAA,KAAW,uBAAwB,CACjCC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAETjD,EAAQ,CACNT,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,KAAM,GACNC,WAAY,GACZC,QAAS,KAEXqC,YAAW,WAETvD,OAAOC,SAASC,QAAO,EACzB,GAAG,IACL,GACJ,EA8FAsE,GAAsClE,EAAAA,EAAAA,WAAS,GAAKmE,GAAAjE,EAAAA,EAAAA,GAAAgE,EAAA,GACpDE,IADkBD,EAAA,GAAgBA,EAAA,IACMnE,EAAAA,EAAAA,WAAS,IAAKqE,IAAAnE,EAAAA,EAAAA,GAAAkE,GAAA,GACtDE,IADmBD,GAAA,GAAiBA,GAAA,IACArE,EAAAA,EAAAA,WAAS,IAAMuE,IAAArE,EAAAA,EAAAA,GAAAoE,GAAA,GACnDE,IADiBD,GAAA,GAAeA,GAAA,IACEvE,EAAAA,EAAAA,WAAS,IAAMyE,IAAAvE,EAAAA,EAAAA,GAAAsE,GAAA,GACjDE,IADgBD,GAAA,GAAcA,GAAA,IACJzE,EAAAA,EAAAA,WAAS,IAAM2E,IAAAzE,EAAAA,EAAAA,GAAAwE,GAAA,GAA7BC,GAAA,GAAUA,GAAA,IAGCC,EAAAA,EAAAA,QAAO,MAe9B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CACbzB,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBwB,aAAa,EACbvB,cAAY,EACZwB,KAAK,EACLC,kBAAgB,EAChBvB,WAAS,EACTD,cAAY,EACZI,MAAM,QACNqB,MAAM,aAGRL,EAAAA,EAAAA,KAACC,EAAAA,GAAc,IACb9E,GA+VA6E,EAAAA,EAAAA,KAACM,EAAAA,EAAO,KA9VRT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OACEF,UAAU,cACVS,IAAI,iBACJC,IAAI,UAENX,EAAAA,EAAAA,MAAA,QACEC,UAAU,mBACVW,UAAU,OACVC,YAAU,EAEVC,SAzSW,SAACC,GACpBrG,QAAQC,IAAI,uBACZkC,EAAS,IACTkE,EAAM5C,iBACN,IAAQ1C,EAAiDQ,EAAjDR,MAAOE,EAA0CM,EAA1CN,UAAWC,EAA+BK,EAA/BL,SAAUE,EAAqBG,EAArBH,WAAYD,EAASI,EAATJ,KAE3CJ,EAAMuF,MAAM,aAEe,IAArBrF,EAAUsF,QAAoC,IAApBrF,EAASqF,OAC5CpE,EAAS,4CACgB,IAAhBhB,EAAKoF,OACdpE,EAAS,sBACS,WAAThB,GAA2C,IAAtBC,EAAWmF,OACzCpE,EAAS,wBACS,WAAThB,GAAqC,IAAhBS,EAAK2E,OACnCpE,EAAS,iDAETA,EAAS,YACTtB,GAAW,GACX3B,EAAAA,EAAAA,SACEqC,EAAKR,MACLQ,EAAKP,SACLO,EAAKN,UACLM,EAAKL,SACLK,EAAKJ,KACLI,EAAKH,WACLG,EAAKF,QACLO,GACAkC,MACA,WACEE,EAAAA,GAAAA,QAAc,2BAA4B,CACxCC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAETf,YAAW,WACTpD,EAAS,8BACTH,OAAOC,SAASC,QAClB,GAAG,IACL,IACA,SAAC6B,GACC8B,EAAAA,GAAAA,KAAW,sBAAuB,CAChCC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAETjD,EAAQ,CACNT,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,KAAM,GACNC,WAAY,GACZC,QAAS,KAEXqC,YAAW,WACTpD,EAAS,UACTH,OAAOC,SAASC,QAClB,GAAG,IACL,KA9DF8B,EAAS,oCAiEb,EAkOUqE,GAAI,CAAEC,GAAI,GAAIjB,SAAA,EAEdC,EAAAA,EAAAA,KAAA,OAAK5F,GAAG,oBACR4F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAYS,IAAI,sBAAoBC,IAAI,eACvDR,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACnB,UAAU,eAAeW,UAAU,KAAKS,QAAQ,KAAInB,UAC9DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,mCAE5BC,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACnB,UAAU,eAAekB,GAAI,EAAGP,UAAU,KAAKS,QAAQ,KAAInB,UACrEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,sBAG5BF,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CAACrB,UAAU,mBAAmBsB,WAAS,EAACC,QAAS,EAAEtB,SAAA,EACtDC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEzB,UACvBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,gBAAiB,CACfC,MAAO,CAAEC,SAAU,GAAIC,WAAY,WAGrCC,aAAa,OAEb3E,KAAK,YACLC,MAAOtB,EAAKN,UACZuG,SAAUhF,EACViF,UAAQ,EACRC,WAAS,EACT7H,GAAG,YACHT,MAAM,aACNuI,WAAS,EACT7B,MAAM,UACNP,UAAU,iBAGdE,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEzB,UACvBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,gBAAiB,CACfC,MAAO,CAAEC,SAAU,GAAIC,WAAY,WAErCG,UAAQ,EACRC,WAAS,EACT7H,GAAG,WACHT,MAAM,YACNwD,KAAK,WACLC,MAAOtB,EAAKL,SACZsG,SAAUhF,EACV+E,aAAa,OACbzB,MAAM,UACNP,UAAU,iBAGdE,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAExB,UACfC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,gBAAiB,CACfC,MAAO,CAAEC,SAAU,GAAIC,WAAY,WAErCG,UAAQ,EACRC,WAAS,EACT7H,GAAG,QACHT,MAAM,gBACNwD,KAAK,QACLC,MAAOtB,EAAKR,MACZyG,SAAUhF,EACVsD,MAAM,UACNP,UAAU,YACVgC,aAAa,YAGjB9B,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAK,EAAExB,UAClBC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLzG,KAAK,SACLuG,WAAS,EACTG,SAAUvF,EACVwF,QAAUvE,EACVgC,UAAU,aACVoB,QAAQ,YACRb,MAAM,UACN1C,KAAK,QACLoD,GAAI,CAAEC,GAAI,EAAGsB,GAAI,GAAIvC,UAErBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,mBAI5BC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAExB,UAEjBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,gBAAiB,CACfC,MAAO,CAAEC,SAAU,GAAIC,WAAY,WAErCG,UAAQ,EACRC,WAAS,EACT9E,KAAK,WACLxD,MAAM,YACN+B,KAAK,WACLtB,GAAG,WACHgD,MAAOtB,EAAKP,SACZwG,SAAUhF,EACV+E,aAAa,OACbzB,MAAM,UACNP,UAAU,iBAMZE,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAK,EAAExB,UAWpBC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACHzG,KAAK,SACLuG,WAAS,EACTI,QAvQM,SAACrF,GACnBA,EAAEgB,iBACF,IAAMuE,EAAOzG,EAAKP,SAClBhB,QAAQC,IAAI+H,GACZ7H,OAAO4D,mBACJkE,QAAQD,GACRlE,MAAK,SAACoE,GAEL,IAAMjJ,EAAOiJ,EAAOjJ,KACpBe,QAAQC,IAAIkI,KAAKC,UAAUnJ,IAC3BoJ,MAAM,mBA4ER,IACC3D,OAAM,SAACxC,GAGNlC,QAAQC,IAAI,qBACd,GACJ,EA4KcsF,UAAU,aACVoB,QAAQ,YACRb,MAAM,UACN1C,KAAK,QACLoD,GAAI,CAAEC,GAAI,EAAGsB,GAAI,GAAIvC,UAErBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,oBAI5BC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGxB,UAChBF,EAAAA,EAAAA,MAACgD,EAAAA,EAAW,CACV/C,UAAU,YACViB,GAAI,CAAE+B,MAAO,OAAQlB,SAAU,IAAK7B,SAAA,EAEpCC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CACTrB,gBAAiB,CACfC,MAAO,CAAEC,SAAU,GAAIC,WAAY,WAErCzH,GAAG,kCAAiC2F,UAEpCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,YAE5BF,EAAAA,EAAAA,MAACmD,EAAAA,EAAM,CACLjC,GAAI,CAAEa,SAAU,UAChBqB,QAAQ,kCACR7I,GAAG,4BACHgD,MAAOtB,EAAKJ,KACZ/B,MAAM,OACNwD,KAAK,OACL4E,SAAUhF,EACVsD,MAAM,UAASN,SAAA,EAEfC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAM,GAAE2C,UAERC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SAAC,cAE1BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,SAAS2C,UAEhBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,gBAE5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,WAAW2C,UAElBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,uBAMnB,WAAdjE,EAAKJ,OACJsE,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGxB,UAChBF,EAAAA,EAAAA,MAACgD,EAAAA,EAAW,CAAC/C,UAAU,YAAYO,MAAM,UAAUU,GAAI,CAAE+B,MAAO,QAAS/C,SAAA,EACvEC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAAC3I,GAAG,kCAAiC2F,UAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,qBAE1BF,EAAAA,EAAAA,MAACmD,EAAAA,EAAM,CACLjC,GAAI,CAAEa,SAAU,UAChBqB,QAAQ,kCACR7I,GAAG,4BACHgD,MAAOtB,EAAKH,WACZhC,MAAM,aACNwD,KAAK,aACL4E,SAAUhF,EAAagD,SAAA,EAEvBC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CAAC9F,MAAM,GAAE2C,UAChBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SAAC,YAE1BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,UAAU2C,UAEjBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,cAE5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,kBAAkB2C,UAEzBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,sBAE5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,UAAU2C,UAEjBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,eAE5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,WAAW2C,UAElBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,gBAE5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,aAAa2C,UAEpBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,kBAE5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,WAAW2C,UAElBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,gBAE5BC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPnC,GAAI,CAAEa,SAAU,SAAUC,WAAY,UACtCzE,MAAO,4BAA4B2C,UAEnCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,yCAOpCC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGxB,UAChBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,gBAAiB,CACfC,MAAO,CAAEC,SAAU,GAAIC,WAAY,WAErCI,WAAS,EACT9E,KAAK,UACLxD,MAAM,qBACN+B,KAAK,UACLtB,GAAG,UACHgD,MAAOtB,EAAKF,QACZmG,SAAUhF,EACV+E,aAAa,cACbzB,MAAM,UACNP,UAAU,gBAGC,WAAdhE,EAAKJ,OACJsE,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGxB,UAChBC,EAAAA,EAAAA,KAACmD,EAAAA,EAAS,CACRhH,KAAMA,EACNiH,YAAanJ,EACboJ,aAjkBG,SAACC,GACpB,IAAMC,EAAUpH,EAAKqH,MAAM,GAC3BD,EAAQE,OAAOH,EAAG,GAClBlH,EAAQmH,EACV,EA8jBkBG,eA5jBK,SAACC,GACtBvH,EAAQ,GAADwH,QAAAC,EAAAA,EAAAA,GAAK1H,GAAI,CAAEwH,IACpB,EA2jBkBG,YAAY,cACZC,UAAU,EACVC,WAAW,EACXC,eAAgB,EAChBC,WAAY,CACVd,YAAa,0BASZ,aAAV3G,IACCuD,EAAAA,EAAAA,KAAA,MACE2B,MAAO,CAAEwC,UAAW,SAAU9D,MAAO,MAAO+D,UAAW,QAASrE,SAE/DtD,KAKHuD,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACb,MAAI,EAACC,GAAK,GAChB7F,KAAK,SACLuG,WAAS,EAETnC,UAAU,aACVoB,QAAQ,YACRb,MAAM,UACN1C,KAAK,QACLoD,GAAI,CAAEC,GAAI,EAAGsB,GAAI,GAAIvC,UAErBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,gBAI9BC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,WAAS,EAACiD,eAAe,SAAQtE,UACrCC,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACG,MAAI,EAAAvB,UACRF,EAAAA,EAAAA,MAACyE,EAAAA,GAAI,CAACxE,UAAU,YAAYyE,GAAG,SAASrD,QAAQ,QAAOnB,SAAA,CAAC,6BAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,0BAuCnE,C,6CCv2BErC,EAAAA,EAAAA,cAVmB,CACjB8G,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAMX,IAAenH,EAAQ,C","sources":["Routes/Register.js","Routes/firebase.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport firebase from \"./firebase\";\r\nimport '../styles/Styles.css'\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n//import Select from 'react-select';\r\nconst user = AuthService.getCurrentUser();\r\n\r\n\r\n\r\nconst options = [\r\n  // Leaves\r\n  { label: \"Amaranthus\" },\r\n  { label: \"Beet Root\" },\r\n  { label: \"Chukka- sorrel Leaves\" },\r\n  { label: \"Colocasia Leaves\" },\r\n  { label: \"Curry Leaves\" },\r\n  { label: \"Dill\" },\r\n  { label: \"Fenugreek Leaves\" },\r\n  { label: \"Green Amaranth\" },\r\n  { label: \"Spinach\" },\r\n  { label: \"Spring Onion\" },\r\n  { label: \"Sufflower\" },\r\n  // Wild-Antic\r\n  { label: \"Chilli\" },\r\n  { label: \" Colocasia Roots\" },\r\n  { label: \"Cucumber Madras\" },\r\n  { label: \"Kohlrabi\" },\r\n  { label: \"Onion White-Pandhara Kanda\" },\r\n  { label: \"Pointed Gourd\" },\r\n  { label: \"Pumpkin\" },\r\n  { label: \"Raw Jackfruit\" },\r\n  { label: \"Raw Papaya\" },\r\n  { label: \"Sambhar Kanda\" },\r\n  { label: \"Snake Gourd\" },\r\n  { label: \"Spiny Gourd\" },\r\n  { label: \"Sweet Potato\" },\r\n  { label: \"Yam\" },\r\n  // Exotic\r\n  { label: \"Asparagus\" },\r\n  { label: \"Avocado\" },\r\n  { label: \"Baby Corn\" },\r\n  { label: \"Baby Potato\" },\r\n  { label: \"Basil\" },\r\n  { label: \"Broccoli\" },\r\n  { label: \"Celery\" },\r\n  { label: \"Cherry Tomato\" },\r\n  { label: \"chinese Cabbage\" },\r\n  { label: \"Coccinia\" },\r\n  { label: \"Green Zucchini\" },\r\n  { label: \"Iceberg Lettuce\" },\r\n  { label: \"Parsley\" },\r\n  { label: \"Red Cabbage\" },\r\n  { label: \"Red Capsicum\" },\r\n  { label: \"Romaine Lettuce\" },\r\n  { label: \"Yellow Capsicum\" },\r\n  { label: \"Yellow Zucchini\" },\r\n  { label: \"Mushroom\" },\r\n  { label: \"Sweet Corn\" },\r\n  { label: \"Sweet Corn Grains\" },\r\n  // Special stall\r\n  { label: \"Cabbage\" },\r\n  { label: \"Potato (Agra)\" },\r\n  { label: \"Potato (Indore)\" },\r\n  { label: \"Potato (Talegav)\" },\r\n  // Fruit Vegetables\r\n  { label: \"Beans Double\" },\r\n  { label: \"Bitter Gourd\" },\r\n  { label: \"Brinjal Big\" },\r\n  { label: \"Brinjal Green\" },\r\n  { label: \"Brinjal Long Green\" },\r\n  { label: \"Brinjal Purple\" },\r\n  { label: \"Carrot\" },\r\n  { label: \"Cauliflower\" },\r\n  { label: \"Chavali Beans\" },\r\n  { label: \"Chickpeas - Chana sprouts\" },\r\n  { label: \"chilli - Bhavgagari Mirchi\" },\r\n  { label: \"Chilli Green\" },\r\n  { label: \"chilli Simple\" },\r\n  { label: \"Cluster Beans\" },\r\n  { label: \"Coconut\" },\r\n  { label: \"Colocasia Roots\" },\r\n  { label: \"Coriander\" },\r\n  { label: \"Cucumber\" },\r\n  { label: \"Cucumder Madras\" },\r\n  { label: \"Cucumber Madras- Sambar Kakadi\" },\r\n  { label: \"Cucumber Polyhouse- English Kakadi\" },\r\n  { label: \"Drum Sticks\" },\r\n  { label: \"Field Beans\" },\r\n  { label: \"Fresh Peeled Green Peas\" },\r\n  { label: \"Garlic\" },\r\n  { label: \"Ginger\" },\r\n  { label: \"Green Capsicum\" },\r\n  { label: \"Green Mango\" },\r\n  { label: \"Green Peas\" },\r\n  { label: \"Groundnut Pods\" },\r\n  { label: \"Tamarind\" },\r\n  { label: \"Lady Finger\" },\r\n  { label: \"Lemon Grass\" },\r\n  { label: \"Mint\" },\r\n  { label: \"Onion\" },\r\n  { label: \"Onion Sambhar\" },\r\n  { label: \"Lima Beans\" },\r\n  { label: \"Peeled Garlic\" },\r\n  { label: \"Potato\" },\r\n  { label: \"Radish\" },\r\n  { label: \"Ridgegourd\" },\r\n  { label: \"Sponge Gourd\" },\r\n  { label: \"Tomato\" },\r\n  { label: \"Wal\" },\r\n  { label: \"Wal Broad\" },\r\n  { label: \"Wal surati\" },\r\n  { label: \"Water Chestnuts\" },\r\n  // Fruit Export\r\n  { label: \"Apple Fuji\" },\r\n  { label: \"Apple Green\" },\r\n  { label: \"Apple Kinnaur\" },\r\n  { label: \"Apple Red Delicious\" },\r\n  { label: \"Apple Shimla Big\" },\r\n  { label: \"Kiwi\" },\r\n  { label: \"Litchi\" },\r\n  { label: \"Strawberry\" },\r\n  // Fruit Summer\r\n  { label: \"Grapes Black\" },\r\n  { label: \"Grapes Green\" },\r\n  { label: \"Jambhul\" },\r\n  { label: \"Mango Badami (For Juice)\" },\r\n  { label: \"Mango Devgad Hapus\" },\r\n  { label: \"Mango Keshar\" },\r\n  { label: \"Mango Lalbag\" },\r\n  { label: \"Mango Payri\" },\r\n  { label: \"Mango Ratnagiri Hapus\" },\r\n  { label: \"Mango Totapuri\" },\r\n  { label: \"Muskmelon\" },\r\n  { label: \"Watermelon Kiran\" },\r\n  { label: \"Watermelon Regular\" },\r\n  // Fruit\r\n  { label: \"Amla\" },\r\n  { label: \"Apple Gourd\" },\r\n  { label: \"Ashgourd\" },\r\n  { label: \"Banana\" },\r\n  { label: \"Custard-apple\" },\r\n  { label: \"Elaichi Banana\" },\r\n  { label: \"Figs\" },\r\n  { label: \"Guava\" },\r\n  { label: \"Jackfruit Peeled\" },\r\n  { label: \"Jujube - Ber\" },\r\n  { label: \"Orange Small\" },\r\n  { label: \"Orange Kinnow\" },\r\n  { label: \"Papaya\" },\r\n  { label: \"Pear Imported\" },\r\n  { label: \"Pomogranate\" },\r\n  { label: \"Raw Banana\" },\r\n  { label: \"Sapodilla\" },\r\n  { label: \"Sugarcane\" },\r\n  { label: \"Sweet Lime\" },\r\n  { label: \"Tender\" },\r\n];\r\n\r\n\r\nexport default function Register({ t, languages }) {\r\n\r\n  var num=1;\r\n  const newArray = options.map((option) => ({\r\n    id: String(num++),\r\n    text: option.label,\r\n  }));\r\n  console.log(newArray)\r\n\r\n  useEffect(() => {\r\n    if (!!user) {\r\n      AuthService.logout();\r\n      window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  const [Loading, setLoading] = useState(false);\r\n  \r\n  const [data, setData] = useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    type: \"\",\r\n    farmertype: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const [tags, setTags] = React.useState([]);\r\n  const [tag1, setTag] = useState();\r\n  const [error, seterror] = useState(\"\");\r\n  const [disable,setDisable] = useState(false);\r\n  // const handleDelete = (i) => {\r\n  //   setTags(tags.filter((tag, index) => index !== i));\r\n  // };\r\n\r\n  // const handleAddition = (tag) => {\r\n  //   console.log(\"here\", tag1);\r\n  //   setTags([...tags, tag]);\r\n  //   setTag('');\r\n  // };\r\n\r\n  // const handleDrag = (tag, currPos, newPos) => {\r\n  //   const newTags = tags.slice();\r\n\r\n  //   newTags.splice(currPos, 1);\r\n  //   newTags.splice(newPos, 0, tag);\r\n\r\n  //   // re-render\r\n  //   setTags(newTags);\r\n  // };\r\n\r\n  const handleDelete = (i) => {\r\n    const newTags = tags.slice(0);\r\n    newTags.splice(i, 1);\r\n    setTags(newTags);\r\n  };\r\n\r\n  const handleAddition = (tag) => {\r\n    setTags([...tags, tag]);\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    console.log(\"inside handleSubmit\")\r\n    seterror(\"\");\r\n    event.preventDefault();\r\n    const { phone, firstname, lastname, farmertype, type } = data;\r\n\r\n    if (!phone.match(\"[0-9]{10}\")) {\r\n      seterror(\"Please provide valid phone number\");\r\n    } else if (firstname.length === 0 && lastname.length === 0) {\r\n      seterror(\"Please provide valid first and last name\");\r\n    } else if (type.length === 0) {\r\n      seterror(\"Please select type\");\r\n    } else if (type === \"farmer\" && farmertype.length === 0) {\r\n      seterror(\"select producer type\");\r\n    } else if (type === \"farmer\" && tags.length === 0) {\r\n      seterror(\"select atleast one commodity and press enter\");\r\n    } else {\r\n      seterror(\"no error\");\r\n      setLoading(true);\r\n      AuthService.register(\r\n        data.phone,\r\n        data.password,\r\n        data.firstname,\r\n        data.lastname,\r\n        data.type,\r\n        data.farmertype,\r\n        data.address,\r\n        tags\r\n      ).then(\r\n        () => {\r\n          toast.success(\"Registration successful!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/registeration-successfull\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          toast.warn(\"User Already Exists\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            phone: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            type: \"\",\r\n            farmertype: \"\",\r\n            address: \"\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const configureCaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"sign-in-button\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: (response) => {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          onSignInSubmit();\r\n          console.log(\"Recaptcha Verified\");\r\n        },\r\n        defaultCountry: \"IN\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"here\")\r\n    configureCaptcha();\r\n    setDisable(true);  \r\n    setTimeout(() =>{setDisable(false)},5000);\r\n    const phoneNumber = \"+91\" + data.phone;\r\n    // // console.log(values.mobile)\r\n    // // const phone = values.mobile\r\n    // const phoneNumber = \"+91\" + mobile\r\n    console.log(phoneNumber);\r\n\r\n\r\n\r\n    const appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then((confirmationResult) => {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        toast.success(\"OTP SENT!\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        window.confirmationResult = confirmationResult;\r\n        console.log(\"OTP has been sent\");\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Error; SMS not sent\r\n        // ...\r\n        console.log(\"SMS Not Sent\");\r\n        toast.warn(\"Invalid Phone Number\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setData({\r\n          phone: \"\",\r\n          password: \"\",\r\n          firstname: \"\",\r\n          lastname: \"\",\r\n          type: \"\",\r\n          farmertype: \"\",\r\n          address: \"\",\r\n        });\r\n        setTimeout(() => {\r\n          \r\n          window.location.reload(false);\r\n        }, 1000);\r\n      });\r\n  };\r\n  const onSubmitOTP = (e) => {\r\n    e.preventDefault();\r\n    const code = data.password;\r\n    console.log(code);\r\n    window.confirmationResult\r\n      .confirm(code)\r\n      .then((result) => {\r\n        //User signed in successfully.\r\n        const user = result.user;\r\n        console.log(JSON.stringify(user));\r\n        alert(\"User is Verified\");\r\n        //window.location.href = \"/newpassword\";\r\n        //handleSubmit()\r\n        // console.log(\"inside handleSubmit\")\r\n        // seterror(\"\");\r\n\r\n        // const { phone, firstname, lastname, farmertype, type } = data;\r\n\r\n        // if (!phone.match(\"[0-9]{10}\")) {\r\n        //   seterror(\"Please provide valid phone number\");\r\n        // } else if (firstname.length === 0 && lastname.length === 0) {\r\n        //   seterror(\"Please provide valid first and last name\");\r\n        // } else if (type.length === 0) {\r\n        //   seterror(\"Please select type\");\r\n        // } else if (type === \"farmer\" && farmertype.length === 0) {\r\n        //   seterror(\"select producer type\");\r\n        // } else if (type === \"farmer\" && tags.length === 0) {\r\n        //   seterror(\"select atleast one commodity and press enter\");\r\n        // } else {\r\n        //   seterror(\"no error\");\r\n        //   setLoading(true);\r\n        //   AuthService.register(\r\n        //     data.phone,\r\n        //     data.password,\r\n        //     data.firstname,\r\n        //     data.lastname,\r\n        //     data.type,\r\n        //     data.farmertype,\r\n        //     data.address,\r\n        //     tags\r\n        //   ).then(\r\n        //     () => {\r\n        //       toast.success(\"Registration successful!\", {\r\n        //         position: \"top-center\",\r\n        //         autoClose: 3000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //       });\r\n        //       setTimeout(() => {\r\n        //         navigate(\"/registeration-successfull\");\r\n        //         window.location.reload();\r\n        //       }, 1000);\r\n        //     },\r\n        //     (error) => {\r\n        //       toast.warn(\"User Already Exists\", {\r\n        //         position: \"top-center\",\r\n        //         autoClose: 5000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //       });\r\n        //       setData({\r\n        //         phone: \"\",\r\n        //         password: \"\",\r\n        //         firstname: \"\",\r\n        //         lastname: \"\",\r\n        //         type: \"\",\r\n        //         farmertype: \"\",\r\n        //         address: \"\",\r\n        //       });\r\n        //       setTimeout(() => {\r\n        //         navigate(\"/login\");\r\n        //         window.location.reload();\r\n        //       }, 1000);\r\n        //     }\r\n        //   );\r\n        // }\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // User couldn't sign in (bad verification code?)\r\n        // ...\r\n        console.log(\"erroe in sumbitotp\")\r\n      });\r\n  };\r\n  const [isClearable, setIsClearable] = useState(true);\r\n  const [isSearchable, setIsSearchable] = useState(true);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRtl, setIsRtl] = useState(false);\r\n\r\n\r\n  const suggestionsRef = useRef(null);\r\n\r\n  function handleScroll(event) {\r\n    event.preventDefault();\r\n    const { scrollTop, scrollHeight, clientHeight } = event.target;\r\n    if (scrollTop === 0) {\r\n      // Scrolled to the top\r\n    } else if (scrollTop + clientHeight === scrollHeight) {\r\n      // Scrolled to the bottom\r\n    } else {\r\n      // Scrolled in the middle\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        color=\"success\"\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n      {!Loading ? (\r\n        <div className=\"authbox\">\r\n          <img\r\n            className=\"login_image\"\r\n            src=\"./images/2.png\"\r\n            alt=\"logo\"\r\n          />\r\n          <form\r\n            className=\"register_details\"\r\n            component=\"form\"\r\n            noValidate\r\n            \r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <div id=\"sign-in-button\"></div>\r\n            <img className=\"form-logo\" src=\".\\images\\logo.png\" alt=\"form-logo\" />\r\n            <Typography className=\"form-heading\" component=\"h1\" variant=\"h5\">\r\n              <span className=\"heading\">Welcome to Wingrow Agritech</span>\r\n            </Typography>\r\n            <Typography className=\"form-heading\" mt={2} component=\"h1\" variant=\"h5\">\r\n              <span className=\"heading\">Signup with us</span>\r\n            </Typography>\r\n            \r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  // autoComplete=\"given-name\"\r\n                  autoComplete=\"nope\"\r\n\r\n                  name=\"firstname\"\r\n                  value={data.firstname}\r\n                  onChange={handleChange}\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  value={data.lastname}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"nope\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}  >\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  name=\"phone\"\r\n                  value={data.phone}\r\n                  onChange={handleChange}\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                  autoComplete=\"nope\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs ={6}>\r\n              <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                disabled={disable}\r\n                onClick={ onSignInSubmit }\r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 2, mb: 2 }}\r\n              >\r\n                <span className=\"heading\">Fetch Otp</span>\r\n              </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}  >\r\n              \r\n              <TextField \r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"Arturo\"},\r\n                }}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter OTP\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"nope\"\r\n                color=\"success\"\r\n                className=\"textfield\"\r\n                \r\n              />\r\n            \r\n            \r\n              </Grid>\r\n              <Grid item xs ={6}>\r\n              {/* <button \r\n              fullWidth\r\n              className=\"signup-btn\" \r\n              type=\"button\"\r\n              variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n              >\r\n              Submit OTP & Register\r\n            </button> */}\r\n            <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                onClick={ onSubmitOTP }\r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 2, mb: 2 }}\r\n              >\r\n                <span className=\"heading\">Submit OTP</span>\r\n              </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className=\"textfield\"\r\n                  sx={{ width: \"100%\", fontSize: 14 }}\r\n                >\r\n                  <InputLabel\r\n                    inputlabelprops={{\r\n                      style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                    }}\r\n                    id=\"demo-simple-select-helper-label\"\r\n                  >\r\n                    <span className=\"heading\">Type</span>\r\n                  </InputLabel>\r\n                  <Select\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={data.type}\r\n                    label=\"Type\"\r\n                    name=\"type\"\r\n                    onChange={handleChange}\r\n                    color=\"success\"\r\n                  >\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value=\"\"\r\n                    >\r\n                      <em className=\"heading\">Select</em>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value={\"farmer\"}\r\n                    >\r\n                      <span className=\"heading\">Producer</span>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      <span className=\"heading\">Consumer</span>\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <FormControl className='textfield' color=\"success\" sx={{ width: \"100%\" }}>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">\r\n                    <span className=\"heading\">Producer Type</span>\r\n                    </InputLabel>\r\n                    <Select\r\n                      sx={{ fontSize: \"1.3rem\" }}\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={data.farmertype}\r\n                      label=\"farmertype\"\r\n                      name=\"farmertype\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em className=\"heading\">None</em>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"farmers\"}\r\n                      >\r\n                        <span className=\"heading\">Farmer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Organic farmers\"}\r\n                      >\r\n                        <span className=\"heading\">Organic Farmer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"FPO/FPC\"}\r\n                      >\r\n                        <span className=\"heading\">FPO/FPC</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Retailer\"}\r\n                      >\r\n                        <span className=\"heading\">Retailer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Wholesaler\"}\r\n                      >\r\n                        <span className=\"heading\">Wholesaler</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Start-up\"}\r\n                      >\r\n                        <span className=\"heading\">Start Up</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Vocal for local producers\"}\r\n                      >\r\n                        <span className=\"heading\">Vocal for Local Producers</span>\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\"},\r\n                  }}\r\n                  fullWidth\r\n                  name=\"address\"\r\n                  label=\"address (optional)\"\r\n                  type=\"address\"\r\n                  id=\"address\"\r\n                  value={data.address}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"new-address\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <ReactTags\r\n                    tags={tags}\r\n                    suggestions={newArray}\r\n                    handleDelete={handleDelete}\r\n                    handleAddition={handleAddition}\r\n                    placeholder=\"Add new tag\"\r\n                    allowNew={true}\r\n                    autofocus={false}\r\n                    minQueryLength={1}\r\n                    classNames={{\r\n                      suggestions: 'tag-suggestions'\r\n                    }}\r\n                  />\r\n\r\n                </Grid>\r\n                \r\n\r\n              )}\r\n            </Grid>\r\n            {error !== \"no error\" && (\r\n              <h3\r\n                style={{ alignSelf: \"center\", color: \"red\", marginTop: \"10px\" }}\r\n              >\r\n                {error}\r\n              </h3>\r\n            )}\r\n\r\n          \r\n              <Button item xs ={12}\r\n                type=\"submit\"\r\n                fullWidth\r\n                \r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                <span className=\"heading\">register</span>\r\n              </Button>\r\n            \r\n\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link className=\"form-link\" to=\"/login\" variant=\"body2\">\r\n                  Already have an account? <span className=\"login\">Log In</span>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          {/* <form onSubmit={onSubmitOTP}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                }}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter OTP\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"new-password\"\r\n                color=\"success\"\r\n                className=\"textfield\"\r\n              />\r\n            </Grid>\r\n            <button className=\"forgot-btn\" type=\"submit\">\r\n              Submit OTP & Register\r\n            </button>\r\n          </form> */}\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n}","import firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAUxdUdNhrl8BSz_4MxKa0d6FwiCfgMtUE\",\r\n    authDomain: \"otp-demo-cc2a7.firebaseapp.com\",\r\n    projectId: \"otp-demo-cc2a7\",\r\n    storageBucket: \"otp-demo-cc2a7.appspot.com\",\r\n    messagingSenderId: \"646152500375\",\r\n    appId: \"1:646152500375:web:389ef29c749b662bd8e5d2\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // var auth = firebase.auth();\r\nexport default firebase"],"names":["user","AuthService","options","label","Register","_ref","t","languages","num","newArray","map","option","id","String","text","console","log","useEffect","window","location","reload","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","Loading","setLoading","_useState3","phone","password","firstname","lastname","type","farmertype","address","_useState4","data","setData","_React$useState","React","_React$useState2","tags","setTags","_useState5","_useState6","_useState7","_useState8","error","seterror","_useState9","_useState10","disable","setDisable","handleChange","e","_e$target","target","name","value","prev","_objectSpread","_defineProperty","configureCaptcha","recaptchaVerifier","firebase","size","callback","response","onSignInSubmit","defaultCountry","preventDefault","setTimeout","phoneNumber","appVerifier","signInWithPhoneNumber","then","confirmationResult","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","catch","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","useRef","_jsxs","className","children","_jsx","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","color","Spinner","src","alt","component","noValidate","onSubmit","event","match","length","sx","mt","Typography","variant","Grid","container","spacing","item","xs","sm","TextField","inputlabelprops","style","fontSize","fontFamily","autoComplete","onChange","required","fullWidth","autoFocus","Button","disabled","onClick","mb","code","confirm","result","JSON","stringify","alert","FormControl","width","InputLabel","Select","labelId","MenuItem","ReactTags","suggestions","handleDelete","i","newTags","slice","splice","handleAddition","tag","concat","_toConsumableArray","placeholder","allowNew","autofocus","minQueryLength","classNames","alignSelf","marginTop","justifyContent","Link","to","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId"],"sourceRoot":""}