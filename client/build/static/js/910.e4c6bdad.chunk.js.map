{"version":3,"file":"static/js/910.e4c6bdad.chunk.js","mappings":"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","sources":["Routes/Register.js","Routes/firebase.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport firebase from \"./firebase\";\r\nimport '../styles/Styles.css'\r\n//import Select from 'react-select';\r\nconst user = AuthService.getCurrentUser();\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n  space: 49\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter, KeyCodes.space];\r\n\r\nexport default function Register({ t, languages }) {\r\n  useEffect(() => {\r\n    if (!!user) {\r\n      AuthService.logout();\r\n      window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [data, setData] = useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    type: \"\",\r\n    farmertype: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const [tags, setTags] = React.useState([]);\r\n  const [tag1, setTag] = useState();\r\n  const [error, seterror] = useState(\"\");\r\n\r\n  const handleDelete = (i) => {\r\n    setTags(tags.filter((tag, index) => index !== i));\r\n  };\r\n\r\n  const handleAddition = (tag) => {\r\n    console.log(\"here\", tag1);\r\n    setTags([...tags, tag]);\r\n    setTag('');\r\n  };\r\n\r\n  const handleDrag = (tag, currPos, newPos) => {\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    setTags(newTags);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    console.log(\"inside handleSubmit\")\r\n    seterror(\"\");\r\n    event.preventDefault();\r\n    const { phone, firstname, lastname, farmertype, type } = data;\r\n\r\n    if (!phone.match(\"[0-9]{10}\")) {\r\n      seterror(\"Please provide valid phone number\");\r\n    } else if (firstname.length === 0 && lastname.length === 0) {\r\n      seterror(\"Please provide valid first and last name\");\r\n    } else if (type.length === 0) {\r\n      seterror(\"Please select type\");\r\n    } else if (type === \"farmer\" && farmertype.length === 0) {\r\n      seterror(\"select producer type\");\r\n    } else if (type === \"farmer\" && tags.length === 0) {\r\n      seterror(\"select atleast one commodity and press enter\");\r\n    } else {\r\n      seterror(\"no error\");\r\n      setLoading(true);\r\n      AuthService.register(\r\n        data.phone,\r\n        data.password,\r\n        data.firstname,\r\n        data.lastname,\r\n        data.type,\r\n        data.farmertype,\r\n        data.address,\r\n        tags\r\n      ).then(\r\n        () => {\r\n          toast.success(\"Registration successful!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/registeration-successfull\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          toast.warn(\"User Already Exists\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            phone: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            type: \"\",\r\n            farmertype: \"\",\r\n            address: \"\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const configureCaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"sign-in-button\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: (response) => {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          onSignInSubmit();\r\n          console.log(\"Recaptcha Verified\");\r\n        },\r\n        defaultCountry: \"IN\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"here\")\r\n    configureCaptcha();\r\n\r\n    const phoneNumber = \"+91\" + data.phone;\r\n    // // console.log(values.mobile)\r\n    // // const phone = values.mobile\r\n    // const phoneNumber = \"+91\" + mobile\r\n    console.log(phoneNumber);\r\n\r\n\r\n\r\n    const appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then((confirmationResult) => {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        toast.success(\"OTP SENT!\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        window.confirmationResult = confirmationResult;\r\n        console.log(\"OTP has been sent\");\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Error; SMS not sent\r\n        // ...\r\n        console.log(\"SMS not sent\");\r\n        toast.warn(\"Invalid phone\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setData({\r\n          phone: \"\",\r\n          password: \"\",\r\n          firstname: \"\",\r\n          lastname: \"\",\r\n          type: \"\",\r\n          farmertype: \"\",\r\n          address: \"\",\r\n        });\r\n        setTimeout(() => {\r\n          \r\n          window.location.reload(false);\r\n        }, 1000);\r\n      });\r\n  };\r\n  const onSubmitOTP = (e) => {\r\n    e.preventDefault();\r\n    const code = data.password;\r\n    console.log(code);\r\n    window.confirmationResult\r\n      .confirm(code)\r\n      .then((result) => {\r\n        //User signed in successfully.\r\n        const user = result.user;\r\n        console.log(JSON.stringify(user));\r\n        alert(\"User is verified\");\r\n        //window.location.href = \"/newpassword\";\r\n        //handleSubmit()\r\n        // console.log(\"inside handleSubmit\")\r\n        // seterror(\"\");\r\n\r\n        // const { phone, firstname, lastname, farmertype, type } = data;\r\n\r\n        // if (!phone.match(\"[0-9]{10}\")) {\r\n        //   seterror(\"Please provide valid phone number\");\r\n        // } else if (firstname.length === 0 && lastname.length === 0) {\r\n        //   seterror(\"Please provide valid first and last name\");\r\n        // } else if (type.length === 0) {\r\n        //   seterror(\"Please select type\");\r\n        // } else if (type === \"farmer\" && farmertype.length === 0) {\r\n        //   seterror(\"select producer type\");\r\n        // } else if (type === \"farmer\" && tags.length === 0) {\r\n        //   seterror(\"select atleast one commodity and press enter\");\r\n        // } else {\r\n        //   seterror(\"no error\");\r\n        //   setLoading(true);\r\n        //   AuthService.register(\r\n        //     data.phone,\r\n        //     data.password,\r\n        //     data.firstname,\r\n        //     data.lastname,\r\n        //     data.type,\r\n        //     data.farmertype,\r\n        //     data.address,\r\n        //     tags\r\n        //   ).then(\r\n        //     () => {\r\n        //       toast.success(\"Registration successful!\", {\r\n        //         position: \"top-center\",\r\n        //         autoClose: 3000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //       });\r\n        //       setTimeout(() => {\r\n        //         navigate(\"/registeration-successfull\");\r\n        //         window.location.reload();\r\n        //       }, 1000);\r\n        //     },\r\n        //     (error) => {\r\n        //       toast.warn(\"User Already Exists\", {\r\n        //         position: \"top-center\",\r\n        //         autoClose: 5000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //       });\r\n        //       setData({\r\n        //         phone: \"\",\r\n        //         password: \"\",\r\n        //         firstname: \"\",\r\n        //         lastname: \"\",\r\n        //         type: \"\",\r\n        //         farmertype: \"\",\r\n        //         address: \"\",\r\n        //       });\r\n        //       setTimeout(() => {\r\n        //         navigate(\"/login\");\r\n        //         window.location.reload();\r\n        //       }, 1000);\r\n        //     }\r\n        //   );\r\n        // }\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // User couldn't sign in (bad verification code?)\r\n        // ...\r\n        console.log(\"erroe in sumbitotp\")\r\n      });\r\n  };\r\n  const [isClearable, setIsClearable] = useState(true);\r\n  const [isSearchable, setIsSearchable] = useState(true);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRtl, setIsRtl] = useState(false);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        color=\"success\"\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n      {!Loading ? (\r\n        <div className=\"authbox\">\r\n          <img\r\n            className=\"login_image\"\r\n            src=\"./images/2.png\"\r\n            alt=\"logo\"\r\n          />\r\n          <form\r\n            className=\"register_details\"\r\n            component=\"form\"\r\n            noValidate\r\n            \r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <div id=\"sign-in-button\"></div>\r\n            <img className=\"form-logo\" src=\"./logo.png\" alt=\"form-logo\" />\r\n            <Typography className=\"form-heading\" component=\"h1\" variant=\"h5\">\r\n              <span className=\"heading\">Welcome to Wingrowagritech</span>\r\n            </Typography>\r\n            <Typography className=\"form-heading\" mt={2} component=\"h1\" variant=\"h5\">\r\n              <span className=\"heading\">Signup with us</span>\r\n            </Typography>\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstname\"\r\n                  value={data.firstname}\r\n                  onChange={handleChange}\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  value={data.lastname}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"family-name\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}  >\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  name=\"phone\"\r\n                  value={data.phone}\r\n                  onChange={handleChange}\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs ={6}>\r\n              <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                onClick={ onSignInSubmit }\r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 2, mb: 2 }}\r\n              >\r\n                <span className=\"heading\">Fetch Otp</span>\r\n              </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}  >\r\n              \r\n              <TextField \r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"Arturo\"},\r\n                }}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter OTP\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"new-password\"\r\n                color=\"success\"\r\n                className=\"textfield\"\r\n              />\r\n            \r\n            \r\n              </Grid>\r\n              <Grid item xs ={6}>\r\n              {/* <button \r\n              fullWidth\r\n              className=\"signup-btn\" \r\n              type=\"button\"\r\n              variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n              >\r\n              Submit OTP & Register\r\n            </button> */}\r\n            <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                onClick={ onSubmitOTP }\r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 2, mb: 2 }}\r\n              >\r\n                <span className=\"heading\">Submit OTP</span>\r\n              </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className=\"textfield\"\r\n                  sx={{ width: \"100%\", fontSize: 14 }}\r\n                >\r\n                  <InputLabel\r\n                    inputlabelprops={{\r\n                      style: { fontSize: 14, fontFamily: \"Arturo\" },\r\n                    }}\r\n                    id=\"demo-simple-select-helper-label\"\r\n                  >\r\n                    <span className=\"heading\">Type</span>\r\n                  </InputLabel>\r\n                  <Select\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={data.type}\r\n                    label=\"Type\"\r\n                    name=\"type\"\r\n                    onChange={handleChange}\r\n                    color=\"success\"\r\n                  >\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value=\"\"\r\n                    >\r\n                      <em className=\"heading\">Select</em>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value={\"farmer\"}\r\n                    >\r\n                      <span className=\"heading\">Producer</span>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      <span className=\"heading\">Consumer</span>\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <FormControl className='textfield' color=\"success\" sx={{ width: \"100%\" }}>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">\r\n                    <span className=\"heading\">Producer Type</span>\r\n                    </InputLabel>\r\n                    <Select\r\n                      sx={{ fontSize: \"1.3rem\" }}\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={data.farmertype}\r\n                      label=\"farmertype\"\r\n                      name=\"farmertype\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em className=\"heading\">None</em>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"farmers\"}\r\n                      >\r\n                        <span className=\"heading\">Farmer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Organic farmers\"}\r\n                      >\r\n                        <span className=\"heading\">Organic Farmer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"FPO/FPC\"}\r\n                      >\r\n                        <span className=\"heading\">FPO/FPC</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Retailer\"}\r\n                      >\r\n                        <span className=\"heading\">Retailer</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Wholesaler\"}\r\n                      >\r\n                        <span className=\"heading\">Wholesaler</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Start-up\"}\r\n                      >\r\n                        <span className=\"heading\">Start Up</span>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"Arturo\" }}\r\n                        value={\"Vocal for local producers\"}\r\n                      >\r\n                        <span className=\"heading\">Vocal for Local Producers</span>\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"Arturo\"},\r\n                  }}\r\n                  fullWidth\r\n                  name=\"address\"\r\n                  label=\"address (optional)\"\r\n                  type=\"address\"\r\n                  id=\"address\"\r\n                  value={data.address}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"new-address\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              {data.type === \"farmer\" && (\r\n\r\n                <Grid item xs={6}  >\r\n                  <ReactTags\r\n                    InputProps={{ style: { fontSize: 15 } }}\r\n                    inputlabelprops={{ style: { fontSize: 15 } }}\r\n                    tags={tags}\r\n                    delimiters={delimiters}\r\n                    handleDelete={handleDelete}\r\n                    handleAddition={handleAddition}\r\n                    handleDrag={handleDrag}\r\n                    inputFieldPosition=\"bottom\"\r\n                    handleInputChange={console.log(\"hello-----\", tags)}\r\n                    autocomplete\r\n                    color=\"success\"\r\n                    className='textfield'\r\n                    placeholder=\"Add Selling Products Names and press enter\"\r\n                  />\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n              )}\r\n            </Grid>\r\n            {error !== \"no error\" && (\r\n              <h3\r\n                style={{ alignSelf: \"center\", color: \"red\", marginTop: \"10px\" }}\r\n              >\r\n                {error}\r\n              </h3>\r\n            )}\r\n\r\n          \r\n              <Button item xs ={12}\r\n                type=\"submit\"\r\n                fullWidth\r\n                \r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                <span className=\"heading\">register</span>\r\n              </Button>\r\n            \r\n\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link className=\"form-link\" to=\"/login\" variant=\"body2\">\r\n                  Already have an account? <span className=\"login\">Log In</span>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          {/* <form onSubmit={onSubmitOTP}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                }}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter OTP\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"new-password\"\r\n                color=\"success\"\r\n                className=\"textfield\"\r\n              />\r\n            </Grid>\r\n            <button className=\"forgot-btn\" type=\"submit\">\r\n              Submit OTP & Register\r\n            </button>\r\n          </form> */}\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n}","import firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAUxdUdNhrl8BSz_4MxKa0d6FwiCfgMtUE\",\r\n    authDomain: \"otp-demo-cc2a7.firebaseapp.com\",\r\n    projectId: \"otp-demo-cc2a7\",\r\n    storageBucket: \"otp-demo-cc2a7.appspot.com\",\r\n    messagingSenderId: \"646152500375\",\r\n    appId: \"1:646152500375:web:389ef29c749b662bd8e5d2\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // var auth = firebase.auth();\r\nexport default firebase"],"names":["user","AuthService","delimiters","Register","_ref","t","languages","useEffect","window","location","reload","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","Loading","setLoading","_useState3","phone","password","firstname","lastname","type","farmertype","address","_useState4","data","setData","_React$useState","React","_React$useState2","tags","setTags","_useState5","_useState6","tag1","setTag","_useState7","_useState8","error","seterror","handleChange","e","_e$target","target","name","value","prev","_objectSpread","_defineProperty","configureCaptcha","recaptchaVerifier","firebase","size","callback","response","onSignInSubmit","console","log","defaultCountry","preventDefault","phoneNumber","appVerifier","signInWithPhoneNumber","then","confirmationResult","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","catch","setTimeout","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_jsxs","className","children","_jsx","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","color","Spinner","src","alt","component","noValidate","onSubmit","event","match","length","sx","mt","id","Typography","variant","Grid","container","spacing","item","xs","sm","TextField","inputlabelprops","style","fontSize","fontFamily","autoComplete","onChange","required","fullWidth","label","autoFocus","Button","onClick","mb","code","confirm","result","JSON","stringify","alert","FormControl","width","InputLabel","Select","labelId","MenuItem","ReactTags","InputProps","handleDelete","i","filter","tag","index","handleAddition","concat","_toConsumableArray","handleDrag","currPos","newPos","newTags","slice","splice","inputFieldPosition","handleInputChange","autocomplete","placeholder","alignSelf","marginTop","justifyContent","Link","to","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId"],"sourceRoot":""}